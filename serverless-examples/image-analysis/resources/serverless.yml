service: resources
frameworkVersion: ">=1.30.0"
custom:
  appsbucket: ${env:IMAGE_ANALYSIS_APPS_BUCKET}
  databucket: ${env:IMAGE_ANALYSIS_DATA_BUCKET}
  crawlerqueue: IACrawlerQueue
  analysisqueue: IAAnalysisQueue
  region: ${env:AWS_DEFAULT_REGION, 'us-east-1'}
  accountid: ${env:AWS_ACCOUNT_ID}

provider:
  name: aws
  stage: dev
  runtime: nodejs12.x
  region: ${env:AWS_DEFAULT_REGION, 'us-east-1'}

resources:
  Resources:
    IAWebAppS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.appsbucket}
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html
    IAWebAppS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: IAWebAppS3Bucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
                - s3:GetObject
              Resource: arn:aws:s3:::${self:custom.appsbucket}/*
    IADataS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.databucket}
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html
    IADataS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: IADataS3Bucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
                - s3:GetObject
              Resource: arn:aws:s3:::${self:custom.databucket}/*
    IACrawlerQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "${self:custom.crawlerqueue}"
    IAAnalysisQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "${self:custom.analysisqueue}"
